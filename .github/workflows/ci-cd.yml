name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate project structure
      run: |
        echo "=== Checking project files ==="
        ls -la
        echo "=== Dockerfile check ==="
        if [ -f "Dockerfile" ]; then
          echo "✓ Dockerfile exists"
          cat Dockerfile
        else
          echo "✗ Dockerfile not found"
          exit 1
        fi
        
        echo "=== package.json check ==="
        if [ -f "package.json" ]; then
          echo "✓ package.json exists"
          cat package.json
        else
          echo "⚠ package.json not found, creating basic one"
          cat > package.json << EOF
{
  "name": "final-project",
  "version": "1.0.0",
  "scripts": {
    "start": "node server.js",
    "test": "echo 'Tests passed'"
  },
  "dependencies": {
    "express": "^4.18.2"
  }
}
EOF
        fi

    - name: Test Docker build locally
      run: |
        echo "Testing Docker build..."
        docker build -t local-test .

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate critical files
      run: |
        echo "=== Validating files for Docker build ==="
        if [ ! -f "Dockerfile" ]; then
          echo "❌ ERROR: Dockerfile not found!"
          exit 1
        fi
        if [ ! -f "package.json" ]; then
          echo "❌ ERROR: package.json not found!"
          exit 1
        fi
        echo "✓ All required files present"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/final-project:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/final-project:${{ github.ref_name }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/final-project:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/final-project:buildcache,mode=max

    - name: Verify push
      run: |
        echo "✅ Docker image pushed successfully!"
        echo "Tags:"
        echo "  - ${{ secrets.DOCKERHUB_USERNAME }}/final-project:latest"
        echo "  - ${{ secrets.DOCKERHUB_USERNAME }}/final-project:${{ github.ref_name }}"
