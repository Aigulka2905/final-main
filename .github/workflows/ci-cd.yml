name: CI/CD Pipeline

on:
  push:
    branches: [main, master, local-iteration]
    tags: ['v*']
  pull_request:
    branches: [main, master, local-iteration]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run Tests and Linters
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Укажи версию Go, соответствующую твоему проекту

      - name: Validate project structure
        run: |
          echo "=== Checking project files ==="
          ls -la
          echo "=== Dockerfile check ==="
          if [ -f "Dockerfile" ]; then
            echo "✓ Dockerfile exists"
          else
            echo "✗ Dockerfile not found"
            exit 1
          fi
          echo "=== Go module check ==="
          if [ -f "go.mod" ]; then
            echo "✓ go.mod exists"
          else
            echo "✗ go.mod not found"
            exit 1
          fi

      - name: Run linters
        run: |
          echo "Running go vet..."
          go vet ./...
          echo "✓ go vet passed"

      - name: Run tests
        run: |
          echo "Running go test..."
          go test ./... -v
          echo "✓ Tests passed"

      - name: Test Docker build locally
        run: |
          echo "Testing Docker build..."
          docker build -t local-test .

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate critical files
        run: |
          echo "=== Validating files for Docker build ==="
          if [ ! -f "Dockerfile" ]; then
            echo "❌ ERROR: Dockerfile not found!"
            exit 1
          fi
          echo "✓ Dockerfile present"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/final-project:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/final-project:${{ github.ref_name }}

      - name: Verify Docker image
        run: |
          echo "Pulling and running Docker image..."
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/final-project:${{ github.ref_name }}
          docker run -d --name test-container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/final-project:${{ github.ref_name }}
          sleep 5
          echo "Checking if container is running..."
          if docker ps | grep test-container; then
            echo "✅ Container is running"
          else
            echo "❌ Container failed to start"
            exit 1
          fi
          docker stop test-container
          docker rm test-container